name: CI

on:
  push:
    branches: [ "main", "*stable", "wip/*" ]
  pull_request:
    branches: [ "main", "*stable", "wip/*" ]
  workflow_dispatch:
    branches: [ "main", "*stable", "wip/*" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  NVIM_GTK_LOG_FILE: nvim-gtk-stdout.log
  NVIM_GTK_LOG_LEVEL: debug
  NVIM_GTK_STDERR: nvim-gtk-stderr.log
  # Brew update breaks otherwise
  HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
  RUSTFLAGS: -C opt-level=0 -D warnings

jobs:
  fedora:
    runs-on: [ubuntu-latest]
    container:
      image: fedora:37

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get Fedora release ID
        id: fedora-release
        run: |
          source /etc/os-release
          echo version=$ID-$VERSION_ID >> $GITHUB_OUTPUT

      - name: Restore dnf cache
        uses: actions/cache/restore@v3
        with:
          key: "dnf-${{ steps.fedora-release.outputs.version }}"
          path: /var/cache/dnf

      - name: Update dnf metadata cache
        id: dnf-metadata
        run: $GITHUB_WORKSPACE/.github/workflows/dnf-makecache.sh

      - name: Configure dnf
        run: |
          OPTS="--setopt=keepcache=true --setopt=install_weak_deps=False --setopt=tsflags=nodocs"
          dnf install $OPTS 'dnf-command(config-manager)' -y
          dnf config-manager $OPTS --save

      - name: Run dnf update
        run: dnf update -y

      - name: Install dependencies
        run: |
          dnf install -y rust cargo rustfmt clippy atk-devel glib2-devel pango-devel gtk4-devel

      - name: Prune dnf package cache
        if: steps.dnf-metadata.outputs.refreshed == '1'
        run: $GITHUB_WORKSPACE/.github/workflows/dnf-prune.sh

      - name: Save dnf cache
        uses: actions/cache/save@v3
        if: steps.dnf-metadata.outputs.refreshed == '1'
        with:
          key: "dnf-${{ steps.fedora-release.outputs.version }}-${{ steps.dnf-metadata.outputs.hash }}"
          path: /var/cache/dnf

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --locked

      - name: Check that rust-fmt is happy
        run: cargo fmt --check -v

      - name: Check for clippy lints
        run: cargo clippy -- -Dwarnings

  osx:
    runs-on: [macos-latest]

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        rust: [stable]
        include:
          - os: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update brew
        run: brew update

      - name: Install dependencies
        run: brew install gtk4

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --locked

  windows:
    runs-on: [windows-latest]

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v3

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-rust
            mingw-w64-x86_64-atk
            mingw-w64-x86_64-pango
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-pkg-config

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --locked
